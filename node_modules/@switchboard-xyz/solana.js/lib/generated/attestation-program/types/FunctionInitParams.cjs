"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FunctionInitParams = void 0;
const borsh = __importStar(require("@coral-xyz/borsh"));
const common_1 = require("@switchboard-xyz/common"); // eslint-disable-line @typescript-eslint/no-unused-vars
class FunctionInitParams {
    name;
    metadata;
    container;
    containerRegistry;
    version;
    schedule;
    mrEnclave;
    recentSlot;
    requestsDisabled;
    requestsRequireAuthorization;
    requestsFee;
    creatorSeed;
    constructor(fields) {
        this.name = fields.name;
        this.metadata = fields.metadata;
        this.container = fields.container;
        this.containerRegistry = fields.containerRegistry;
        this.version = fields.version;
        this.schedule = fields.schedule;
        this.mrEnclave = fields.mrEnclave;
        this.recentSlot = fields.recentSlot;
        this.requestsDisabled = fields.requestsDisabled;
        this.requestsRequireAuthorization = fields.requestsRequireAuthorization;
        this.requestsFee = fields.requestsFee;
        this.creatorSeed = fields.creatorSeed;
    }
    static layout(property) {
        return borsh.struct([
            borsh.vecU8("name"),
            borsh.vecU8("metadata"),
            borsh.vecU8("container"),
            borsh.vecU8("containerRegistry"),
            borsh.vecU8("version"),
            borsh.vecU8("schedule"),
            borsh.array(borsh.u8(), 32, "mrEnclave"),
            borsh.u64("recentSlot"),
            borsh.bool("requestsDisabled"),
            borsh.bool("requestsRequireAuthorization"),
            borsh.u64("requestsFee"),
            borsh.option(borsh.array(borsh.u8(), 32), "creatorSeed"),
        ], property);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    static fromDecoded(obj) {
        return new FunctionInitParams({
            name: new Uint8Array(obj.name.buffer, obj.name.byteOffset, obj.name.length),
            metadata: new Uint8Array(obj.metadata.buffer, obj.metadata.byteOffset, obj.metadata.length),
            container: new Uint8Array(obj.container.buffer, obj.container.byteOffset, obj.container.length),
            containerRegistry: new Uint8Array(obj.containerRegistry.buffer, obj.containerRegistry.byteOffset, obj.containerRegistry.length),
            version: new Uint8Array(obj.version.buffer, obj.version.byteOffset, obj.version.length),
            schedule: new Uint8Array(obj.schedule.buffer, obj.schedule.byteOffset, obj.schedule.length),
            mrEnclave: obj.mrEnclave,
            recentSlot: obj.recentSlot,
            requestsDisabled: obj.requestsDisabled,
            requestsRequireAuthorization: obj.requestsRequireAuthorization,
            requestsFee: obj.requestsFee,
            creatorSeed: obj.creatorSeed,
        });
    }
    static toEncodable(fields) {
        return {
            name: Buffer.from(fields.name.buffer, fields.name.byteOffset, fields.name.length),
            metadata: Buffer.from(fields.metadata.buffer, fields.metadata.byteOffset, fields.metadata.length),
            container: Buffer.from(fields.container.buffer, fields.container.byteOffset, fields.container.length),
            containerRegistry: Buffer.from(fields.containerRegistry.buffer, fields.containerRegistry.byteOffset, fields.containerRegistry.length),
            version: Buffer.from(fields.version.buffer, fields.version.byteOffset, fields.version.length),
            schedule: Buffer.from(fields.schedule.buffer, fields.schedule.byteOffset, fields.schedule.length),
            mrEnclave: fields.mrEnclave,
            recentSlot: fields.recentSlot,
            requestsDisabled: fields.requestsDisabled,
            requestsRequireAuthorization: fields.requestsRequireAuthorization,
            requestsFee: fields.requestsFee,
            creatorSeed: fields.creatorSeed,
        };
    }
    toJSON() {
        return {
            name: Array.from(this.name.values()),
            metadata: Array.from(this.metadata.values()),
            container: Array.from(this.container.values()),
            containerRegistry: Array.from(this.containerRegistry.values()),
            version: Array.from(this.version.values()),
            schedule: Array.from(this.schedule.values()),
            mrEnclave: this.mrEnclave,
            recentSlot: this.recentSlot.toString(),
            requestsDisabled: this.requestsDisabled,
            requestsRequireAuthorization: this.requestsRequireAuthorization,
            requestsFee: this.requestsFee.toString(),
            creatorSeed: this.creatorSeed,
        };
    }
    static fromJSON(obj) {
        return new FunctionInitParams({
            name: Uint8Array.from(obj.name),
            metadata: Uint8Array.from(obj.metadata),
            container: Uint8Array.from(obj.container),
            containerRegistry: Uint8Array.from(obj.containerRegistry),
            version: Uint8Array.from(obj.version),
            schedule: Uint8Array.from(obj.schedule),
            mrEnclave: obj.mrEnclave,
            recentSlot: new common_1.BN(obj.recentSlot),
            requestsDisabled: obj.requestsDisabled,
            requestsRequireAuthorization: obj.requestsRequireAuthorization,
            requestsFee: new common_1.BN(obj.requestsFee),
            creatorSeed: obj.creatorSeed,
        });
    }
    toEncodable() {
        return FunctionInitParams.toEncodable(this);
    }
}
exports.FunctionInitParams = FunctionInitParams;
