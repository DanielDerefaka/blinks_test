import * as types from "../types/index.js";
import { BN } from "@switchboard-xyz/common";
export interface FunctionVerifyParamsFields {
    observedTime: BN;
    nextAllowedTimestamp: BN;
    isFailure: boolean;
    mrEnclave: Array<number>;
}
export interface FunctionVerifyParamsJSON {
    observedTime: string;
    nextAllowedTimestamp: string;
    isFailure: boolean;
    mrEnclave: Array<number>;
}
export declare class FunctionVerifyParams {
    readonly observedTime: BN;
    readonly nextAllowedTimestamp: BN;
    readonly isFailure: boolean;
    readonly mrEnclave: Array<number>;
    constructor(fields: FunctionVerifyParamsFields);
    static layout(property?: string): any;
    static fromDecoded(obj: any): types.FunctionVerifyParams;
    static toEncodable(fields: FunctionVerifyParamsFields): {
        observedTime: BN;
        nextAllowedTimestamp: BN;
        isFailure: boolean;
        mrEnclave: number[];
    };
    toJSON(): FunctionVerifyParamsJSON;
    static fromJSON(obj: FunctionVerifyParamsJSON): FunctionVerifyParams;
    toEncodable(): {
        observedTime: BN;
        nextAllowedTimestamp: BN;
        isFailure: boolean;
        mrEnclave: number[];
    };
}
//# sourceMappingURL=FunctionVerifyParams.d.ts.map