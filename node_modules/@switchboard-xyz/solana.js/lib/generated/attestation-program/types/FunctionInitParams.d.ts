/// <reference types="node" resolution-mode="require"/>
import * as types from "../types/index.js";
import { BN } from "@switchboard-xyz/common";
export interface FunctionInitParamsFields {
    name: Uint8Array;
    metadata: Uint8Array;
    container: Uint8Array;
    containerRegistry: Uint8Array;
    version: Uint8Array;
    schedule: Uint8Array;
    mrEnclave: Array<number>;
    recentSlot: BN;
    requestsDisabled: boolean;
    requestsRequireAuthorization: boolean;
    requestsFee: BN;
    creatorSeed: Array<number> | null;
}
export interface FunctionInitParamsJSON {
    name: Array<number>;
    metadata: Array<number>;
    container: Array<number>;
    containerRegistry: Array<number>;
    version: Array<number>;
    schedule: Array<number>;
    mrEnclave: Array<number>;
    recentSlot: string;
    requestsDisabled: boolean;
    requestsRequireAuthorization: boolean;
    requestsFee: string;
    creatorSeed: Array<number> | null;
}
export declare class FunctionInitParams {
    readonly name: Uint8Array;
    readonly metadata: Uint8Array;
    readonly container: Uint8Array;
    readonly containerRegistry: Uint8Array;
    readonly version: Uint8Array;
    readonly schedule: Uint8Array;
    readonly mrEnclave: Array<number>;
    readonly recentSlot: BN;
    readonly requestsDisabled: boolean;
    readonly requestsRequireAuthorization: boolean;
    readonly requestsFee: BN;
    readonly creatorSeed: Array<number> | null;
    constructor(fields: FunctionInitParamsFields);
    static layout(property?: string): any;
    static fromDecoded(obj: any): types.FunctionInitParams;
    static toEncodable(fields: FunctionInitParamsFields): {
        name: Buffer;
        metadata: Buffer;
        container: Buffer;
        containerRegistry: Buffer;
        version: Buffer;
        schedule: Buffer;
        mrEnclave: number[];
        recentSlot: BN;
        requestsDisabled: boolean;
        requestsRequireAuthorization: boolean;
        requestsFee: BN;
        creatorSeed: number[] | null;
    };
    toJSON(): FunctionInitParamsJSON;
    static fromJSON(obj: FunctionInitParamsJSON): FunctionInitParams;
    toEncodable(): {
        name: Buffer;
        metadata: Buffer;
        container: Buffer;
        containerRegistry: Buffer;
        version: Buffer;
        schedule: Buffer;
        mrEnclave: number[];
        recentSlot: BN;
        requestsDisabled: boolean;
        requestsRequireAuthorization: boolean;
        requestsFee: BN;
        creatorSeed: number[] | null;
    };
}
//# sourceMappingURL=FunctionInitParams.d.ts.map